// <auto-generated />
using System;
using Madrasa.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Madrasa.Api.Migrations
{
    [DbContext(typeof(MadrasaDb))]
    [Migration("20240409124416_SeedRole")]
    partial class SeedRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Madrasa.Api.Model.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Madrasa.Api.Model.Bulletin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Akhlaq")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ElevesId")
                        .HasColumnType("int");

                    b.Property<int?>("ExamenId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Hudhur")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MS1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MS2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MS3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MS4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MS5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MS6")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MS7")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Mention")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ElevesId");

                    b.HasIndex("ExamenId");

                    b.ToTable("Bulletin");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Classes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Classe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupeId")
                        .HasColumnType("int");

                    b.Property<int>("ProfesseursId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupeId");

                    b.HasIndex("ProfesseursId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Eleves", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClassesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEntree")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LieuNaissance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaisonId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SN")
                        .HasColumnType("int");

                    b.Property<string>("Sexe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Suspendu")
                        .HasColumnType("bit");

                    b.Property<string>("TelMobile")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassesId");

                    b.HasIndex("MaisonId");

                    b.ToTable("Eleves");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Examen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Actif")
                        .HasColumnType("bit");

                    b.Property<int?>("Akhlaq")
                        .HasColumnType("int");

                    b.Property<string>("AnneeScolaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClassesId")
                        .HasColumnType("int");

                    b.Property<int?>("Hudhur")
                        .HasColumnType("int");

                    b.Property<int?>("MP")
                        .HasColumnType("int");

                    b.Property<int?>("MPB")
                        .HasColumnType("int");

                    b.Property<int?>("MS1Note")
                        .HasColumnType("int");

                    b.Property<string>("MS1Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MS2Note")
                        .HasColumnType("int");

                    b.Property<string>("MS2Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MS3Note")
                        .HasColumnType("int");

                    b.Property<string>("MS3Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MS4Note")
                        .HasColumnType("int");

                    b.Property<string>("MS4Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MS5Note")
                        .HasColumnType("int");

                    b.Property<string>("MS5Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MS6Note")
                        .HasColumnType("int");

                    b.Property<string>("MS6Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MS7Note")
                        .HasColumnType("int");

                    b.Property<string>("MS7Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfesseursId")
                        .HasColumnType("int");

                    b.Property<string>("Semestre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassesId")
                        .IsUnique()
                        .HasFilter("[ClassesId] IS NOT NULL");

                    b.HasIndex("ProfesseursId")
                        .IsUnique()
                        .HasFilter("[ProfesseursId] IS NOT NULL");

                    b.ToTable("Examen");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Groupe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groupe");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Horaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Duree")
                        .HasColumnType("time");

                    b.Property<int>("GroupeId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("HDeb")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HFin")
                        .HasColumnType("time");

                    b.Property<string>("Jour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumJour")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupeId");

                    b.ToTable("Horaire");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Maison", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Adherent")
                        .HasColumnType("bit");

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Categorie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CodePostal")
                        .HasColumnType("int");

                    b.Property<string>("Complement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TelDomicile")
                        .HasColumnType("int");

                    b.Property<string>("Ville")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Maison");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Matieres", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Arabe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matiere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Principale")
                        .HasColumnType("bit");

                    b.Property<string>("Traduction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Matieres");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Parent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaisonId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TelMobile")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaisonId");

                    b.ToTable("Parent");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Professeurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelMobile")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professeurs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d5cf3836-8cdd-4f1d-97b8-aba653e24dc4",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "ceca4dff-b86c-4be2-867b-7bd4e0299c6d",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Madrasa.Api.Model.Bulletin", b =>
                {
                    b.HasOne("Madrasa.Api.Model.Eleves", "Eleves")
                        .WithMany()
                        .HasForeignKey("ElevesId");

                    b.HasOne("Madrasa.Api.Model.Examen", "Examen")
                        .WithMany()
                        .HasForeignKey("ExamenId");

                    b.Navigation("Eleves");

                    b.Navigation("Examen");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Classes", b =>
                {
                    b.HasOne("Madrasa.Api.Model.Groupe", "Groupe")
                        .WithMany("Classes")
                        .HasForeignKey("GroupeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Madrasa.Api.Model.Professeurs", "Professeurs")
                        .WithMany("Classes")
                        .HasForeignKey("ProfesseursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groupe");

                    b.Navigation("Professeurs");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Eleves", b =>
                {
                    b.HasOne("Madrasa.Api.Model.Classes", "Classes")
                        .WithMany("Eleves")
                        .HasForeignKey("ClassesId");

                    b.HasOne("Madrasa.Api.Model.Maison", "Maison")
                        .WithMany("Eleves")
                        .HasForeignKey("MaisonId");

                    b.Navigation("Classes");

                    b.Navigation("Maison");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Examen", b =>
                {
                    b.HasOne("Madrasa.Api.Model.Classes", "Classes")
                        .WithOne("Examen")
                        .HasForeignKey("Madrasa.Api.Model.Examen", "ClassesId");

                    b.HasOne("Madrasa.Api.Model.Professeurs", "Professeurs")
                        .WithOne("Examen")
                        .HasForeignKey("Madrasa.Api.Model.Examen", "ProfesseursId");

                    b.Navigation("Classes");

                    b.Navigation("Professeurs");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Horaire", b =>
                {
                    b.HasOne("Madrasa.Api.Model.Groupe", "Groupe")
                        .WithMany()
                        .HasForeignKey("GroupeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groupe");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Parent", b =>
                {
                    b.HasOne("Madrasa.Api.Model.Maison", "Maison")
                        .WithMany("Parent")
                        .HasForeignKey("MaisonId");

                    b.Navigation("Maison");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Madrasa.Api.Model.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Madrasa.Api.Model.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Madrasa.Api.Model.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Madrasa.Api.Model.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Madrasa.Api.Model.Classes", b =>
                {
                    b.Navigation("Eleves");

                    b.Navigation("Examen")
                        .IsRequired();
                });

            modelBuilder.Entity("Madrasa.Api.Model.Groupe", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Maison", b =>
                {
                    b.Navigation("Eleves");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Madrasa.Api.Model.Professeurs", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Examen")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
